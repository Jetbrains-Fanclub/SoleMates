@using Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Commerce.Core.Api
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.Site>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    Layout = null;
    var sortPrice = Context.Request.Query["sort"].ToString();
    sortPrice = sortPrice.ToLower();

    var filterBrand = Context.Request.Query["brand"].ToString();
    filterBrand = filterBrand.ToLower();

    var sortPriceAscending = sortPrice == "ascending";

    //var currency = CommerceApi.Instance.GetDefaultCurrency(Store)
    var store = CommerceApi.Instance.GetStore("soleMates");
    var currency = CommerceApi.Instance.GetDefaultCurrency(store.Id);

    IEnumerable<ProductItem> products = Model.FirstChildOfType("products").Children<ProductItem>();
    var brands = products.Select(p => p.Brand).Distinct();

    if (sortPrice == "ascending" || sortPrice == "descending")
    {
        products = products.OrderBy(p =>
        {
            var price = p.Price.GetPriceFor(currency.Id).Value;
            return sortPriceAscending ? price : -price;
        });
    }

    if (!string.IsNullOrEmpty(filterBrand))
    {
        products = products.Where(p => string.IsNullOrEmpty(filterBrand) || p.Brand.ToLower() == filterBrand);
    }
}

<html lang="da">
  <head>
    @await Html.PartialAsync("Head")
  </head>
  <body>
    @await Html.PartialAsync("Header")

    <form class="md-10 flex-center row ">
      <div class="margin-small">
        <select name="sort" style="height: 3em;">
          <option>Sorter pris</option>
          <option value="ascending">Laveste pris</option>
          <option value="descending">Højeste pris</option>
        </select>
      </div>

      <div class="margin-small">
        <select name="brand" style="height: 3em;">
          <option value="">Alle mærker</option>
          @foreach (var brand in brands)
          {
            <option value="@brand.ToLower()">@brand</option>
          }
        </select>
      </div>
      <button class="margin-small" style="height: 3em;" type="submit">Filtrér</button>
    </form>

    <main class="md-10 flex-center row" style="margin: auto;">
      @foreach (var product in products ?? [])
      {
        @await Html.PartialAsync("Product", product);
      }
    </main>

    @await Html.PartialAsync("Footer")
  </body>
</html>